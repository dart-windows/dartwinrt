name: Dart Package Workflow

on:
  workflow_call:
    inputs:
      analyze_directories:
        required: false
        type: string
        default: 'lib test'
      dart_sdk:
        required: false
        type: string
        default: 'stable'
      min_pana_score:
        required: false
        type: number
        default: 130
      runs_on:
        required: false
        type: string
        default: 'ubuntu-latest'
      setup:
        required: false
        type: string
        default: ''
      verify_pana_score:
        required: false
        type: boolean
        default: true
      working_directory:
        required: false
        type: string
        default: '.'

jobs:
  build:
    defaults:
      run:
        working-directory: ${{inputs.working_directory}}

    runs-on: ${{inputs.runs_on}}

    steps:
      - name: 📚 Git Checkout
        uses: actions/checkout@v3

      - name: 🎯 Setup Dart
        uses: dart-lang/setup-dart@v1
        with:
          sdk: ${{inputs.dart_sdk}}

      - name: 📝 Print Dart SDK version
        run: dart --version

      - name: 📦 Install Dependencies
        run: dart pub get

      - name: ⚙️ Run Setup
        if: "${{inputs.setup != ''}}"
        run: ${{inputs.setup}}

      - name: ✨ Check Formatting
        run: dart format --set-exit-if-changed .

      - name: 🕵️ Analyze
        run: dart analyze --fatal-infos --fatal-warnings ${{inputs.analyze_directories}}

      - name: 🧪 Run Tests
        run: dart test

      - name: 📒 Check API Reference Documentation
        if: ${{ inputs.runs_on == 'windows-2022' }}
        run: dart doc --validate-links

  pana:
    if: ${{ inputs.verify_pana_score && inputs.runs_on == 'ubuntu-latest' }}
    defaults:
      run:
        working-directory: ${{inputs.working_directory}}

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - uses: axel-op/dart-package-analyzer@v3
        id: analysis
        with:
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          relativePath: ${{inputs.working_directory}}
      - name: 📊 Verify Pana Score
        env:
          TOTAL: ${{ steps.analysis.outputs.total }}
          TOTAL_MAX: ${{ steps.analysis.outputs.total_max }}
        run: |
          if (( $TOTAL < ${{inputs.min_pana_score}} ))
          then
            echo The minimum score of ${{inputs.min_pana_score}} was not met!
            exit 1
          fi
